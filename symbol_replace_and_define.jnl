\cancel mode verify

!**************************************************************
! Description:
!
! Usage: go symbol_replace_and_define symbolname "stringabctochange" "abc" "xyz"
!
! Example:
!   go symbol_replace_and_define symbolname "stringabctochange" "abc" "xyz"
!   will define a new symbol named symbolname with
!   substring abc replaced by substring xyz
!   Result is here stringxyztochange
!
! Notes:
!   * query $n are commented because the command query does not accept quoting
!    which is necessary to treat text with "/"
!
! Calls: go symbol_define_nbsubstring
!        go symbol_replace_substring
!
! Author: Patrick Brockmann
! Contact: Patrick.Brockmann@ipsl.jussieu.fr
! History:
! Modification:
!
!**************************************************************

!query/ignore $1%<Usage: go symbol_replace_and_define "symbolname" "string" "substring" "newsubstring"%
!query/ignore $2%<Usage: go symbol_replace_and_define "symbolname" "string" "substring" "newsubstring"%
!query/ignore $3%<Usage: go symbol_replace_and_define "symbolname" "string" "substring" "newsubstring"%
!query/ignore $4%<Usage: go symbol_replace_and_define "symbolname" "string" "substring" "newsubstring"%

ppl set ME_symbolname "$1"
ppl set ME_str "$2"
ppl set ME_sstr "$3"
ppl set ME_sstr_new "$4"

!**************************************************************

go symbol_define_nbsubstring 

say Replace ($ME_nbsubstring) substrings

if `($ME_nbsubstring) gt 0` then
	repeat/i=1:`($ME_nbsubstring)` (go symbol_replace_substring)
endif

ppl set ($ME_symbolname) "($ME_str)"
say "New symbol defined: ($ME_symbolname)=($ME_str)"

!**************************************************************
cancel sym ME_*

!**************************************************************
set mode/last verify
