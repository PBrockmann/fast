\cancel mode verify
!**************************************************************
! Description: Plot over the vertical grid of a plot
!
! Usage: go hgridlines2 hdelta [PLOT qualifiers] [time variable]
!
! Example:
!  yes? plot/i=1:100 sin(i/5)
!  yes? go hgridlines2 20 
!  will plot every 20 on the physical xaxis a vertical bar
!  yes? plot/i=1:100 sin(i/5)
!  yes? go hgridlines2 20 /dash=(0.3,0.1,0.3,0.1)/color=red/thick=1
!
! Notes:
!
! Calls:
!
! Author: Patrick Brockmann
! Contact: Patrick.Brockmann@ipsl.jussieu.fr
! $Date: 2011/09/07 15:02:59 $
! $Name: FAST_672_1_0 $
! $Revision: 1.1.1.14 $
! History:
! Modification:
!   18/04/03 Added a time variable option to bypass
!            the bug err551_XAXIS_1.jnl
!	yes? use monthly_navy_winds
!	yes? plot UWND[i=@ave,j=@ave] 
!	yes? go hgridlines2 `730.5*6` " " UWND 
!	! Not clear if correct, still a small offset (bug?)
!	yes? go vgridlines2 0.1 " " UWND 
!
!	yes? use "my_var1.nc"
!	yes? plot var1
!	yes? go hgridlines2 `60*60*24*30*12` " " var1
!
!**************************************************************

query/ignore $1%<Usage: go hgridlines2 hdelta [plot qualifiers] [time variable]%

def sym ME_qualifiers=$2%/DASH=(0.1,0.05,0.1,0.05)%

!-----------------------------------
! Relative to bug err551_XAXIS_1.jnl
def sym ME_XAXIS_VAR=$3%XXXXX%

if ($ME_XAXIS_VAR%|XXXXX>true|*>false|%) then
        def sym ME_XAXIS_MIN=($XAXIS_MIN)
        def sym ME_XAXIS_MAX=($XAXIS_MAX)
else
        let ME_XAXIS_VAR_T=t[gt=($ME_XAXIS_VAR)]
        def sym ME_XAXIS_MIN=`ME_XAXIS_VAR_T[l=1]`
        def sym ME_XAXIS_LEND=`ME_XAXIS_VAR_T,return=lend`
        def sym ME_XAXIS_MAX=`ME_XAXIS_VAR_T[l=($ME_XAXIS_LEND)]`
endif
!-----------------------------------

! x1 = first vertical line (superior value)
if `($ME_XAXIS_MIN) lt 0` then
   def sym ME_x1 = int(($ME_XAXIS_MIN)/$1)*$1
else
   def sym ME_x1 = (int(($ME_XAXIS_MIN)/$1)+1) *$1
endif
! x2 = last vertical line  (inferior value)
if `($ME_XAXIS_MAX) lt 0` then
   def sym ME_x2 = (int(($ME_XAXIS_MAX)/$1)-1) *$1
else
   def sym ME_x2 = (int(($ME_XAXIS_MAX)/$1)) *$1
endif
def sym ME_xrange = `(($ME_x2)) - (($ME_x1))`

def sym ME_x = ($ME_x1) + (i-1)*$1
def sym ME_nbx = int(($ME_xrange)/$1) + 1

if `($ME_nbx) ge 1` then
  repeat/i=1:`($ME_nbx)`:1 ( plot/nolab/over/vs($ME_qualifiers) {`($ME_x)`,`($ME_x)`},{($YAXIS_MIN),($YAXIS_MAX)} )
endif

!**************************************************************
cancel var ME_*
cancel sym ME_*

!**************************************************************
set mode/last verify

