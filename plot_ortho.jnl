\cancel mode verify

!**************************************************************
! Description: Plot longitude,latitude positions in orthographic projection  
!
! Usage: go plot_ortho CENTRAL_MERIDIAN CENTRAL_PARALLEL LONVAR LATVAR [PLOT qualifiers] [marg=40] 
!
! Notes:
!  * Pen numbers (/line=x qualifier) range from 1 to 18 and follow the formula:
!          color_thickness = 6 * (thickness - 1) + color
!  with color = 1,2,3,4,5,6 = black,red,green,blue,cyan,magenta
!  and thickness = 1,2,3
!
! Calls: 
!
! Author: Patrick Brockmann 
! Contact: Patrick.Brockmann@ipsl.jussieu.fr
! History:
! Modification:
!
!**************************************************************

query/ignore $1%<Usage: go plot_ortho CENTRAL_MERIDIAN CENTRAL_PARALLEL LONVAR LATVAR [PLOT qualifiers] [marg=40]%
query/ignore $2%<Usage: go plot_ortho CENTRAL_MERIDIAN CENTRAL_PARALLEL LONVAR LATVAR [PLOT qualifiers] [marg=40]%

set data/save

!**************************************************************
define symbol ME_margin = $6%40%

if $5"false|*>true" then
   define symbol ME_QUALIFIERS = /nolab/vs/line=1/noaxes/hlimits=-1:1/vlimits=-1:1$5
else
   define symbol ME_QUALIFIERS = /nolab/vs/line=1/noaxes/hlimits=-1:1/vlimits=-1:1
endif


!**************************************************************
! ratio width/height=1
def sym ME_ratio = 1 
def sym ME_plot_width = `(1-($ME_margin)/100)*min(($vp_width),($ME_ratio)*($vp_height))`
def sym ME_plot_height = `($ME_plot_width)/($ME_ratio)`
ppl axlen ($ME_plot_width), ($ME_plot_height)
ppl origin `(($vp_width)-($ME_plot_width))/2`,`(($vp_height)-($ME_plot_height))/2`

!**************************************************************
let ME_PI = atan(1.)*4.
let ME_DEG2RAD = ME_PI/180.

!**************************************************************

let ME_Longitude = xsequence(($3)) 
let ME_Latitude = xsequence(($4)) 

let ME_CM = $1 
let ME_CP = $2 

let ME_LAMBDA0 = ME_CM*ME_DEG2RAD
let ME_LAMBDA = ME_Longitude*ME_DEG2RAD
let ME_PHI0 = ME_CP*ME_DEG2RAD
let ME_PHI = ME_Latitude*ME_DEG2RAD

let ME_X_PAGE = cos(ME_PHI)*sin(ME_LAMBDA-ME_LAMBDA0)*ME_MASK
let ME_Y_PAGE = cos(ME_PHI0)*sin(ME_PHI)-sin(ME_PHI0)*cos(ME_PHI)*cos(ME_LAMBDA-ME_LAMBDA0)*ME_MASK
let ME_Z_PAGE = sin(ME_PHI0)*sin(ME_PHI)+cos(ME_PHI0)*cos(ME_PHI)*cos(ME_LAMBDA-ME_LAMBDA0)

let ME_MASK = if ME_Z_PAGE ge 0 then 1

plot/set_up($ME_QUALIFIERS) ME_X_PAGE,ME_Y_PAGE

ppl set ME_QUALIFIERS1 $edit(ME_QUALIFIERS,upcase)
ppl set ME_ISOVER $locate("/OVER",ME_QUALIFIERS1)

if `($ME_ISOVER) gt 0` then
   ppl plot/line/over
else
   ppl plot
endif

!**************************************************************
set data/restore

!**************************************************************
cancel variable ME_*
cancel symbol ME_*

!**************************************************************
set mode/last verify

